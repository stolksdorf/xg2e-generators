const _ = require('lodash');
const utils = require('./utils');

const scores = (arr)=>{
	const shuff = _.shuffle(arr);
	return {
		int : shuff[0],
		wis : shuff[1],
		cha : shuff[2],
		str : shuff[3],
		dex : shuff[4],
		con : shuff[5],
	}
};

module.exports = {
	random(){
		return scores(_.times(6, ()=>{
			const rolls = _.times(4, ()=>utils.d('1d6'));
			const lowest = _.min(rolls);
			return _.sum(rolls) - lowest
		}))
	},
	standard(){
		return scores([15,14,13,12,10])
	},

	pointBuy(){
		return scores(_.sample([
			[15, 14, 13, 12, 10, 8],
			[15, 15, 14, 10, 8, 8],
			[15, 14, 13, 12, 10, 8],
			[14, 14, 14, 12, 10, 8],
			[14, 14, 14, 10, 10, 10],
			[14, 12, 12, 12, 12, 12],
			[15, 13, 13, 13, 11, 8],
			[15, 13, 13, 13, 10, 9],
			[15, 13, 13, 12, 11, 9],
			[15, 13, 13, 11, 11, 10],
			[15, 13, 12, 11, 11, 11],
			[14, 13, 13, 13, 11, 10],
			[13, 13, 13, 13, 13, 10],
			[13, 13, 13, 13, 12, 11],
			[15, 15, 15, 8, 8, 8],
			[15, 15, 14, 10, 8, 8],
			[15, 15, 14, 9, 9, 8],
			[15, 15, 13, 12, 8, 8],
			[15, 15, 13, 11, 9, 8],
			[15, 15, 13, 10, 10, 8],
			[15, 15, 13, 10, 9, 9],
			[15, 15, 12, 12, 9, 8],
			[15, 15, 12, 11, 10, 8],
			[15, 15, 12, 11, 9, 9],
			[15, 15, 12, 10, 10, 9],
			[15, 15, 11, 11, 11, 8],
			[15, 15, 11, 11, 10, 9],
			[15, 15, 11, 10, 10, 10],
			[15, 14, 14, 12, 8, 8],
			[15, 14, 14, 11, 9, 8],
			[15, 14, 14, 10, 10, 8],
			[15, 14, 14, 10, 9, 9],
			[15, 14, 13, 13, 9, 8],
			[15, 14, 13, 12, 10, 8],
			[15, 14, 13, 12, 9, 9],
			[15, 14, 13, 11, 11, 8],
			[15, 14, 13, 11, 10, 9],
			[15, 14, 13, 10, 10, 10],
			[15, 14, 12, 12, 11, 8],
			[15, 14, 12, 12, 10, 9],
			[15, 14, 12, 11, 11, 9],
			[15, 14, 12, 11, 10, 10],
			[15, 14, 11, 11, 11, 10],
			[15, 13, 13, 13, 11, 8],
			[15, 13, 13, 13, 10, 9],
			[15, 13, 13, 12, 12, 8],
			[15, 13, 13, 12, 11, 9],
			[15, 13, 13, 12, 10, 10],
			[15, 13, 13, 11, 11, 10],
			[15, 13, 12, 12, 12, 9],
			[15, 13, 12, 12, 11, 10],
			[15, 13, 12, 11, 11, 11],
			[15, 12, 12, 12, 12, 10],
			[15, 12, 12, 12, 11, 11],
			[14, 14, 14, 13, 9, 8],
			[14, 14, 14, 12, 10, 8],
			[14, 14, 14, 12, 9, 9],
			[14, 14, 14, 11, 11, 8],
			[14, 14, 14, 11, 10, 9],
			[14, 14, 14, 10, 10, 10],
			[14, 14, 13, 13, 11, 8],
			[14, 14, 13, 13, 10, 9],
			[14, 14, 13, 12, 12, 8],
			[14, 14, 13, 12, 11, 9],
			[14, 14, 13, 12, 10, 10],
			[14, 14, 13, 11, 11, 10],
			[14, 14, 12, 12, 12, 9],
			[14, 14, 12, 12, 11, 10],
			[14, 14, 12, 11, 11, 11],
			[14, 13, 13, 13, 13, 8],
			[14, 13, 13, 13, 12, 9],
			[14, 13, 13, 13, 11, 10],
			[14, 13, 13, 12, 12, 10],
			[14, 13, 13, 12, 11, 11],
			[14, 13, 12, 12, 12, 11],
			[14, 12, 12, 12, 12, 12],
			[13, 13, 13, 13, 13, 10],
			[13, 13, 13, 13, 12, 11],
			[13, 13, 13, 12, 12, 12]
		]))
	}
};
